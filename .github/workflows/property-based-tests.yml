name: Property-Based Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  property-tests:
    runs-on: ubuntu-latest
    outputs:
      test-result: ${{ steps.property-test.outcome }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Determine test duration
      id: test-config
      run: |
        if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
          echo "duration=120" >> $GITHUB_OUTPUT
          echo "branch-type=main" >> $GITHUB_OUTPUT
        elif [[ "${{ github.ref }}" == "refs/heads/develop" ]]; then
          echo "duration=60" >> $GITHUB_OUTPUT
          echo "branch-type=develop" >> $GITHUB_OUTPUT
        else
          echo "duration=5" >> $GITHUB_OUTPUT
          echo "branch-type=pr" >> $GITHUB_OUTPUT
        fi
    
    - name: Run Property-Based Tests
      id: property-test
      run: |
        cd tests
        # Modifier la durée selon la branche
        sed -i "s/TEST_DURATION_SECONDS = [0-9]*/TEST_DURATION_SECONDS = ${{ steps.test-config.outputs.duration }}/" propertybased.py
        echo "Running property-based tests for ${{ steps.test-config.outputs.duration }} seconds on ${{ steps.test-config.outputs.branch-type }}"
        python propertybased.py
      continue-on-error: false
    
    - name: Upload test results on failure
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: property-test-failure-${{ github.sha }}
        path: tests/propertybased.py

  # Job qui dépend du succès des tests property-based
  build-and-test:
    needs: property-tests
    runs-on: ubuntu-latest
    if: success()
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        
    - name: Build Rust project
      run: cargo build --verbose
      
    - name: Run Rust tests
      run: cargo test --verbose

  # Job pour les autres tests (dépend aussi du succès des property-based tests)
  integration-tests:
    needs: property-tests
    runs-on: ubuntu-latest
    if: success()
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Run integration tests
      run: |
        cd example
        python -m pytest test_*.py -v
        
  # Job de déploiement (seulement si tous les tests passent)
  deploy:
    needs: [property-tests, build-and-test, integration-tests]
    runs-on: ubuntu-latest
    if: success() && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy to production
      run: |
        echo "Deploying to production..."
        # Ici vos commandes de déploiement
